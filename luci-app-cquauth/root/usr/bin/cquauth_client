#!/usr/bin/lua

local uci = require "uci"
local ctx = uci.cursor()
local ubus = require "ubus"

local PING_TARGET = ctx:get("cquauth", "basic", "ping_target") or "223.5.5.5"
local CHECK_INTERVAL = ctx:get("cquauth", "basic", "check_interval") or 60

local function log(msg)
    os.execute(string.format("logger -t cquauth_client '%s'", msg:gsub("'", "'\\''")))
end

local function log_ifname(ifname, msg)
    log(string.format("[%s] %s", ifname, msg))
end

local function check_network(ifname)
    if not ifname then
        log("无效网络接口: " .. (ifname or "nil"))
        return false
    end
    local cmd = string.format("ping -c 4 -W 2 -I %s %s >/dev/null 2>&1", ifname, PING_TARGET)
    return os.execute(cmd) == 0
end

local function auth_account(config)
    local count = 0
    local max_attempts = tonumber(ctx:get("cquauth", "basic", "max_attempts")) or 3
    local conn = ubus.connect()
    if not conn then
        log("无法连接到 ubusd")
        return false
    end

    while count < max_attempts or max_attempts == 0 do
        local result = conn:call("cquauth", "login", {
            user = config.user,
            pass = config.pass,
            interface = config.interface,
            ua = config.ua,
            terminal_type = config.terminal_type
        })

        if result and result.success then
            log_ifname(config.interface, string.format("认证成功: %s", config.user))
            local status = conn:call("cquauth", "get_status", { interface = config.interface })
            if status then
                log_ifname(config.interface, string.format("UID: %s, Time: %s, Flow: %s, IP: %s",
                    status.uid or "N/A", status.time or "N/A", status.flow or "N/A", status.v4ip or "N/A"))
            end
            conn:close()
            return true
        else
            count = count + 1
            log_ifname(config.interface, string.format("认证失败: %s - %s (尝试 %d/%d)", config.user, result and result.message or "未知错误", count, max_attempts))
            os.execute("sleep 5")
        end
    end
    conn:close()
    return false
end

while true do
    local success, err = pcall(function()
        if not ctx:get("cquauth", "basic", "enabled") then
            return
        end
        ctx:foreach("cquauth", "account", function(s)
            if s.enabled == "1" then
                local config = {
                    user = s.user or "",
                    pass = s.pass or "",
                    ua = s.ua or "",
                    interface = s.interface or "",
                    terminal_type = s.terminal_type or "pc"
                }
                if not check_network(config.interface) then
                    log_ifname(config.interface, "网络断开: 开始认证")
                    if not auth_account(config) then
                        log_ifname(config.interface, "认证失败: " .. config.user)
                        ctx:set("cquauth", s['.name'], "enabled", "0")
                        ctx:commit("cquauth")
                    end
                end
            end
        end)
    end)
    if not success then
        log("程序错误: " .. err)
    end
    os.execute("sleep " .. CHECK_INTERVAL)
end